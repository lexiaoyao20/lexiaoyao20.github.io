<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苏波的个人博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-08T00:06:40.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Su Bo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>弱引用字典</title>
    <link href="http://yoursite.com/2016/05/08/%E5%BC%B1%E5%BC%95%E7%94%A8%E5%AD%97%E5%85%B8/"/>
    <id>http://yoursite.com/2016/05/08/弱引用字典/</id>
    <published>2016-05-08T00:04:15.000Z</published>
    <updated>2016-05-08T00:06:40.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;我们都有用过 &lt;code&gt;UIButton&lt;/code&gt; 的这个方法：&lt;br&gt; &lt;code&gt;- (void)addTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents;&lt;/code&gt;&lt;br&gt;不知道大家是否有去想过里面的实现原理。&lt;code&gt;addTarget:action:forControlEvents&lt;/code&gt; 方法是用什么来保存这个target呢？&lt;br&gt;显然，里面不是用的数组就是用的字典来保存target，而target和action又是一一对应的，所以我猜其内部是用一个字典来保存。&lt;/p&gt;
&lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt; &lt;/excerpt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;/the&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是，我们都知道 &lt;code&gt;NSMutableDictionary&lt;/code&gt; 的 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSMutableDictionary_Class/index.html#//apple_ref/occ/instm/NSMutableDictionary/setObject:forKey:&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;- setObject:forKey:&lt;/a&gt; 方法会强引用对象，这样就会很容易造成循环引用。下面举个例子来说明一下。&lt;/p&gt;
&lt;p&gt;例如，我们有一个viewController，viewController上有对 &lt;code&gt;UIButton&lt;/code&gt; 的强引用，&lt;code&gt;UIButton&lt;/code&gt; 调用 &lt;code&gt;addTarget:action:forControlEvents&lt;/code&gt; 中这个target又是viewController，示例代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@interface ViewController ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (strong, nonatomic) UIButton *button;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.button = [[UIButton alloc] initWithFrame:CGRectMake(50, 50, 100, 32)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.button setTitle:@&amp;quot;Button&amp;quot; forState:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.button setBackgroundColor:[UIColor redColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.button.titleLabel.font = [UIFont systemFontOfSize:19];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.button addTarget:self action:@selector(touchButton:) forControlEvents:UIControlEventTouchUpInside];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)touchButton:(UIButton *)button &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;touchButton&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按照常规的逻辑，会形成如下图的一个循环引用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-5c7a374828325fb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图1：循环引用.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是实际上并没有形成循环引用，说明苹果内部做了处理。&lt;br&gt;接下来，我会介绍有哪些方法可以处理弱引用字典。&lt;/p&gt;
&lt;h2 id=&quot;方法一：NSValue&quot;&gt;&lt;a href=&quot;#方法一：NSValue&quot; class=&quot;headerlink&quot; title=&quot;方法一：NSValue&quot;&gt;&lt;/a&gt;方法一：NSValue&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (nullable id)objectForKey:(id&amp;lt;NSCopying&amp;gt;)aKey &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSValue *value = [self objectForKey:aKey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return value.nonretainedObjectValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)fm_setObject:(id)anObject forKey:(id &amp;lt;NSCopying&amp;gt;)aKey &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSValue *value = [NSValue valueWithNonretainedObject:anObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self setObject:value forKey:aKey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)fm_setDictionary:(NSDictionary *)otherDictionary &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [otherDictionary enumerateKeysAndObjectsUsingBlock:^(id  _Nonnull key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         id  _Nonnull obj,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         BOOL * _Nonnull stop) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self fm_setObject:obj forKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分别用到了 &lt;code&gt;NSValue&lt;/code&gt; 的 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSValue_Class/index.html#//apple_ref/occ/clm/NSValue/valueWithNonretainedObject:&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;+ valueWithNonretainedObject: &lt;/a&gt; 和 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSValue_Class/index.html#//apple_ref/occ/instp/NSValue/nonretainedObjectValue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nonretainedObjectValue &lt;/a&gt; 方法来存取对象。&lt;/p&gt;
&lt;h2 id=&quot;方法二：用block封装与解封&quot;&gt;&lt;a href=&quot;#方法二：用block封装与解封&quot; class=&quot;headerlink&quot; title=&quot;方法二：用block封装与解封&quot;&gt;&lt;/a&gt;方法二：用block封装与解封&lt;/h2&gt;&lt;p&gt;下面的代码是从 &lt;a href=&quot;https://github.com/Magic-Unique/HXImage/blob/master/description.md#方案二之-弱引用字典&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HXImage&lt;/a&gt; 拿过来的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;利用block封装一个对象, 且block中对象的持有操作是一个弱引用指针. 而后将block当做对象放入容器中. 容器直接持有block, 而不直接持有对象. 取对象时解包block即可得到对应对象.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;第一步，封装与解封装&quot;&gt;&lt;a href=&quot;#第一步，封装与解封装&quot; class=&quot;headerlink&quot; title=&quot;第一步，封装与解封装&quot;&gt;&lt;/a&gt;第一步，封装与解封装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;typedef id (^WeakReference)(void);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WeakReference makeWeakReference(id object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __weak id weakref = object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return weakref;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id weakReferenceNonretainedObjectValue(WeakReference ref) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ref ? ref() : nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;第二步，改造原容器&quot;&gt;&lt;a href=&quot;#第二步，改造原容器&quot; class=&quot;headerlink&quot; title=&quot;第二步，改造原容器&quot;&gt;&lt;/a&gt;第二步，改造原容器&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)weak_setObject:(id)anObject forKey:(NSString *)aKey &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self setObject:makeWeakReference(anObject) forKey:aKey];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)weak_setObjectWithDictionary:(NSDictionary *)dic &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (NSString *key in dic.allKeys) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self setObject:makeWeakReference(dic[key]) forKey:key];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (id)weak_getObjectForKey:(NSString *)key &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return weakReferenceNonretainedObjectValue(self[key]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法三：创建-NSProxy-的子类来处理&quot;&gt;&lt;a href=&quot;#方法三：创建-NSProxy-的子类来处理&quot; class=&quot;headerlink&quot; title=&quot;方法三：创建 NSProxy 的子类来处理&quot;&gt;&lt;/a&gt;方法三：创建 NSProxy 的子类来处理&lt;/h3&gt;&lt;p&gt;像&lt;a href=&quot;https://github.com/ibireme/YYKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYKit&lt;/a&gt; 这套框架就是用的这种方法，完整可以参见 &lt;a href=&quot;https://github.com/ibireme/YYKit/blob/master/YYKit/Utility/YYWeakProxy.m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYWeakProxy&lt;/a&gt; 这个类。&lt;br&gt;下面摘取了部分代码：&lt;br&gt;&lt;a href=&quot;https://github.com/ibireme/YYKit/blob/master/YYKit/Utility/YYWeakProxy.h&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYWeakProxy.h&lt;/a&gt; 文件.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@interface YYWeakProxy : NSProxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; The proxy target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (nullable, nonatomic, weak, readonly) id target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Creates a new weak proxy for target.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @param target Target object.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @return A new proxy object.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)initWithTarget:(id)target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)proxyWithTarget:(id)target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ibireme/YYKit/blob/master/YYKit/Utility/YYWeakProxy.m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YYWeakProxy.m&lt;/a&gt; 文件.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation YYWeakProxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)initWithTarget:(id)target &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _target = target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (instancetype)proxyWithTarget:(id)target &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [[YYWeakProxy alloc] initWithTarget:target];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (id)forwardingTargetForSelector:(SEL)selector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return _target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)forwardInvocation:(NSInvocation *)invocation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void *null = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [invocation setReturnValue:&amp;amp;null];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSMethodSignature *)methodSignatureForSelector:(SEL)selector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [NSObject instanceMethodSignatureForSelector:@selector(init)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)respondsToSelector:(SEL)aSelector &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target respondsToSelector:aSelector];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)isEqual:(id)object &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target isEqual:object];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSUInteger)hash &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target hash];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (Class)superclass &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target superclass];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (Class)class &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target class];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)isKindOfClass:(Class)aClass &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target isKindOfClass:aClass];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)isMemberOfClass:(Class)aClass &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target isMemberOfClass:aClass];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)conformsToProtocol:(Protocol *)aProtocol &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target conformsToProtocol:aProtocol];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)isProxy &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSString *)description &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target description];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSString *)debugDescription &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [_target debugDescription];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;具体使用的示例代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation MyView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSTimer *_timer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)initTimer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    YYWeakProxy *proxy = [YYWeakProxy proxyWithTarget:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _timer = [NSTimer timerWithTimeInterval:0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     target:proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   selector:@selector(tick:)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   userInfo:nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    repeats:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)tick:(NSTimer *)timer &amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可能会问前面两个方法不是很简单吗，干嘛要搞得这么麻烦？&lt;br&gt;其实，这主要是为了利用 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSProxy_Class/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSProxy&lt;/a&gt; 来实现代理模式，使用 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSProxy_Class/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSProxy&lt;/a&gt; 的消息转发机制让它来调用其他类的方法。 这样做和前面两个方法有一个不一样的地方：前面两个方法都要存取对象，要把对象从容器中取出来才能用；第三个方法利用了&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSProxy_Class/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSProxy&lt;/a&gt;消息转发机制就不需要这样做了。&lt;/p&gt;
&lt;p&gt;更多的 &lt;code&gt;NSProxy&lt;/code&gt; 使用 可以参考 &lt;a href=&quot;http://www.cnblogs.com/dlx-Blog/p/4425501.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSProxy使用笔记&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;总结：三种方法都可以实现弱引用字典，具体用哪种方法就看你个人喜好咯。当然，用上面三种方法也可以实现弱引用数组。&lt;br&gt;我这里用第一种方法简单的封装了下弱引用数组和弱引用字典：&lt;a href=&quot;https://github.com/lexiaoyao20/WeakDictionary/tree/master/WeakDictionary/WeakObject&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/lexiaoyao20/WeakDictionary/tree/master/WeakDictionary/WeakObject&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;我们都有用过 &lt;code&gt;UIButton&lt;/code&gt; 的这个方法：&lt;br&gt; &lt;code&gt;- (void)addTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents;&lt;/code&gt;&lt;br&gt;不知道大家是否有去想过里面的实现原理。&lt;code&gt;addTarget:action:forControlEvents&lt;/code&gt; 方法是用什么来保存这个target呢？&lt;br&gt;显然，里面不是用的数组就是用的字典来保存target，而target和action又是一一对应的，所以我猜其内部是用一个字典来保存。&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="weak" scheme="http://yoursite.com/tags/weak/"/>
    
      <category term="NSDictionary" scheme="http://yoursite.com/tags/NSDictionary/"/>
    
      <category term="NSArray" scheme="http://yoursite.com/tags/NSArray/"/>
    
  </entry>
  
  <entry>
    <title>谈一谈UIScrollView的scrollsToTop属性</title>
    <link href="http://yoursite.com/2016/05/06/%E8%B0%88%E4%B8%80%E8%B0%88UIScrollView%E7%9A%84scrollsToTop%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2016/05/06/谈一谈UIScrollView的scrollsToTop属性/</id>
    <published>2016-05-06T15:29:46.000Z</published>
    <updated>2016-05-06T15:47:45.000Z</updated>
    
    <content type="html">&lt;p&gt;相信很多人都没有注意到iOS有这样一个隐藏的功能：当前页面有滚动视图（ &lt;code&gt;UIScrollView&lt;/code&gt; 或者 &lt;code&gt;UIScrollView&lt;/code&gt; 的子类，下面我都称作滚动视图），触摸状态栏，视图会自动滚动的最顶端，相当于一些网页的回到顶端的功能。下面给个图来展示下：&lt;/p&gt;
&lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt; &lt;/excerpt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;/the&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-cb4e2f8a121c3cba.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;图1：触摸状态栏回到顶部&quot;&gt;&lt;/p&gt;
&lt;p&gt;#一. 遇到的问题&lt;br&gt;如果页面有多个滚动视图，如顶部一个广告轮播控件（假如是基于&lt;code&gt;UIScrollView&lt;/code&gt;的轮播控件），下面是一个TableView，你会发现触摸状态栏没有反应了，回到顶部功能失效。&lt;/p&gt;
&lt;p&gt;#二. 解决问题&lt;br&gt;细细研究了一番返现，&lt;code&gt;UIScrollView&lt;/code&gt;有个&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollView_Class/#//apple_ref/occ/instp/UIScrollView/scrollsToTop&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scrollsToTop&lt;/a&gt;属性，这个属性就是控制滚动到顶部手势的开关。它的默认值是&lt;code&gt;YES&lt;/code&gt;，所以不用我们设置，默认是支持滚动到顶部的。具体详细描述如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The scroll-to-top gesture is a tap on the status bar. When a user makes this gesture, the system asks the scroll view closest to the status bar to scroll to the top. If that scroll view has &lt;code&gt;scrollsToTop&lt;/code&gt;&lt;br&gt;set to &lt;code&gt;NO&lt;/code&gt;, its delegate returns &lt;code&gt;NO&lt;/code&gt; from &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollViewDelegate_Protocol/index.html#//apple_ref/occ/intfm/UIScrollViewDelegate/scrollViewShouldScrollToTop:&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scrollViewShouldScrollToTop:&lt;/a&gt;&lt;br&gt;, or the content is already at the top, nothing happens.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单点的说就是有两种方式来设定&lt;code&gt;scroll to top&lt;/code&gt;，一个是设置&lt;code&gt;scrollsToTop&lt;/code&gt;属性，另一个是实现&lt;code&gt;UIScrollView&lt;/code&gt;的代理方法&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollViewDelegate_Protocol/index.html#//apple_ref/occ/intfm/UIScrollViewDelegate/scrollViewShouldScrollToTop:&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scrollViewShouldScrollToTop:&lt;/a&gt;。如果滚动视图&lt;code&gt;scrollsToTop&lt;/code&gt;属性设为&lt;code&gt;NO&lt;/code&gt;，它的代理方法&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollViewDelegate_Protocol/index.html#//apple_ref/occ/intfm/UIScrollViewDelegate/scrollViewShouldScrollToTop:&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scrollViewShouldScrollToTop:&lt;/a&gt;返回&lt;code&gt;NO&lt;/code&gt;，或者内容已经在顶部了，这样触摸状态栏，是没有任何反应的。&lt;/p&gt;
&lt;p&gt;好了，继续回到上面遇到的问题，既然默认是YES，为什么回到顶部的功能失效了呢，其实仔细想一想就知道了，因为有两个&lt;code&gt;scrollView&lt;/code&gt;，他们默认都有&lt;code&gt;scroll to top&lt;/code&gt;功能，所以触摸状态栏时，系统无法判断是使哪个&lt;code&gt;ScrollView&lt;/code&gt;回到顶部。&lt;/p&gt;
&lt;p&gt;解决方案很简单，就是设置其中一个&lt;code&gt;ScrollView&lt;/code&gt;的&lt;code&gt;scrollsToTop&lt;/code&gt;值为&lt;code&gt;NO&lt;/code&gt;（例如我将广告轮播控件的&lt;code&gt;scrollsToTop&lt;/code&gt;设为&lt;code&gt;NO&lt;/code&gt;），这样系统就知道要使哪个&lt;code&gt;ScrollView&lt;/code&gt;回到顶部了。如果当前页面有多个滚动视图的话，要确保只有一个滚动视图&lt;code&gt;scrollsToTop&lt;/code&gt;的值为&lt;code&gt;YES&lt;/code&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;相信很多人都没有注意到iOS有这样一个隐藏的功能：当前页面有滚动视图（ &lt;code&gt;UIScrollView&lt;/code&gt; 或者 &lt;code&gt;UIScrollView&lt;/code&gt; 的子类，下面我都称作滚动视图），触摸状态栏，视图会自动滚动的最顶端，相当于一些网页的回到顶端的功能。下面给个图来展示下：&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="UIScrollView" scheme="http://yoursite.com/tags/UIScrollView/"/>
    
      <category term="scrollsToTop属性" scheme="http://yoursite.com/tags/scrollsToTop%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>自定义UISearchBar外观</title>
    <link href="http://yoursite.com/2016/05/06/%E8%87%AA%E5%AE%9A%E4%B9%89UISearchBar%E5%A4%96%E8%A7%82/"/>
    <id>http://yoursite.com/2016/05/06/自定义UISearchBar外观/</id>
    <published>2016-05-06T15:19:53.000Z</published>
    <updated>2016-05-06T15:38:12.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt; &lt;/excerpt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;/the&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近，在项目过程中遇到要自定义SearchBar的外观，虽然自己觉得用系统默认的外观就行了，不过UI设计师要求不用系统的默认样式，要跟app主题保持一致。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-2fb38aaa38a2b351.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图1：设计效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出，我们要做的UISearchBar要有圆角，边框颜色，取消按钮颜色，背景透明等等。&lt;/p&gt;
&lt;p&gt;开始以为可能要自己写一个自定义的UISearchBar控件了，后面研究了一番，发现可以设定系统UISearchBar属性来更改，便把经验记录下来。&lt;/p&gt;
&lt;p&gt;首先，我们看下系统默认的SearchBar的样式，离我们的目标样式确实相差很大, 后面我会一步一步详细说明做成我们的目标样式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-aa74f9c818acb15c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图2：UISearchBar默认样式&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-设置背景色&quot;&gt;&lt;a href=&quot;#1-设置背景色&quot; class=&quot;headerlink&quot; title=&quot;1. 设置背景色&quot;&gt;&lt;/a&gt;1. 设置背景色&lt;/h2&gt;&lt;p&gt;我以白色的背景色为例，下面看看代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//1. 设置背景颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //设置背景图是为了去掉上下黑线&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.customSearchBar.backgroundImage = [[UIImage alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 设置SearchBar的颜色主题为白色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.customSearchBar.barTintColor = [UIColor whiteColor];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-334f53955785e12d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图3：设置SearchBar背景色为白色&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-设置边框颜色和圆角&quot;&gt;&lt;a href=&quot;#2-设置边框颜色和圆角&quot; class=&quot;headerlink&quot; title=&quot;2. 设置边框颜色和圆角&quot;&gt;&lt;/a&gt;2. 设置边框颜色和圆角&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//2. 设置圆角和边框颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UITextField *searchField = [self.customSearchBar valueForKey:@&amp;quot;searchField&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (searchField) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [searchField setBackgroundColor:[UIColor whiteColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        searchField.layer.cornerRadius = 14.0f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        searchField.layer.borderColor = [UIColor colorWithRed:247/255.0 green:75/255.0 blue:31/255.0 alpha:1].CGColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        searchField.layer.borderWidth = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        searchField.layer.masksToBounds = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码有个特别的地方就是通过KVC获得到UISearchBar的私有变量&lt;br&gt;&lt;em&gt;searchField&lt;/em&gt;（类型为UITextField），设置SearchBar的边框颜色和圆角实际上也就变成了设置&lt;em&gt;searchField&lt;/em&gt;的边框颜色和圆角，你可以试试直接设置SearchBar.layer.borderColor和cornerRadius，会发现这样做是有问题的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-6124f34ef12a93c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图4：设置边框颜色和圆角&quot;&gt;&lt;/p&gt;
&lt;p&gt;嗯，离预期效果越来越近了，有木有！&lt;/p&gt;
&lt;h2 id=&quot;3-设置按钮（取消按钮）的文字和文字颜色&quot;&gt;&lt;a href=&quot;#3-设置按钮（取消按钮）的文字和文字颜色&quot; class=&quot;headerlink&quot; title=&quot;3. 设置按钮（取消按钮）的文字和文字颜色&quot;&gt;&lt;/a&gt;3. 设置按钮（取消按钮）的文字和文字颜色&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//3. 设置按钮文字和颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.customSearchBar fm_setCancelButtonTitle:@&amp;quot;取消&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.customSearchBar.tintColor = [UIColor colorWithRed:86/255.0 green:179/255.0 blue:11/255.0 alpha:1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //修正光标颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [searchField setTintColor:[UIColor blackColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//其中fm_setCancelButtonTitle是我写的UISearchBar一个分类的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)fm_setCancelButtonTitle:(NSString *)title &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (IS_IOS9) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [[UIBarButtonItem appearanceWhenContainedInInstancesOfClasses:@[[UISearchBar class]]] setTitle:title];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [[UIBarButtonItem appearanceWhenContainedIn:[UISearchBar class], nil] setTitle:title];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-a5e30981395601fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图5：设置按钮文字和颜色&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别注意的是设置searchBar的tintColor会使输入框的光标颜色改变，可以通过设置searchField的tintColor来修正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-设置输入框的文字颜色和字体&quot;&gt;&lt;a href=&quot;#4-设置输入框的文字颜色和字体&quot; class=&quot;headerlink&quot; title=&quot;4. 设置输入框的文字颜色和字体&quot;&gt;&lt;/a&gt;4. 设置输入框的文字颜色和字体&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//4. 设置输入框文字颜色和字体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.customSearchBar fm_setTextColor:[UIColor blackColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.customSearchBar fm_setTextFont:[UIFont systemFontOfSize:14]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面两个方法是UISearchBar分类代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)fm_setTextColor:(UIColor *)textColor &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (IS_IOS9) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [UITextField appearanceWhenContainedInInstancesOfClasses:@[[UISearchBar class]]].textColor = textColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [[UITextField appearanceWhenContainedIn:[UISearchBar class], nil] setTextColor:textColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)fm_setCancelButtonTitle:(NSString *)title &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (IS_IOS9) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [[UIBarButtonItem appearanceWhenContainedInInstancesOfClasses:@[[UISearchBar class]]] setTitle:title];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [[UIBarButtonItem appearanceWhenContainedIn:[UISearchBar class], nil] setTitle:title];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-f77ae765fab77822.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图6：最终对比效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-如何设置搜索图标&quot;&gt;&lt;a href=&quot;#5-如何设置搜索图标&quot; class=&quot;headerlink&quot; title=&quot;5. 如何设置搜索图标&quot;&gt;&lt;/a&gt;5. 如何设置搜索图标&lt;/h2&gt;&lt;p&gt;下面评论中有简友问我怎么更改默认的搜索图标，我查了下UISearchBar的API，发现有方法可以更改的。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//5. 设置搜索Icon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.customSearchBar setImage:[UIImage imageNamed:@&amp;quot;Search_Icon&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  forSearchBarIcon:UISearchBarIconSearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             state:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了跟系统默认Icon的有个明显的对比，我特殊找了张绿色的搜索Icon，效果见下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-447342dd9b0e5606.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;设置搜索Icon.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips: 还可以设置其他的Icon（如清除按钮图标），也是用上面的方法，具体要设置什么，可以去看看UISearchBarIcon这个枚举。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;最后，介绍下QQ的搜索样式的实现&quot;&gt;&lt;a href=&quot;#最后，介绍下QQ的搜索样式的实现&quot; class=&quot;headerlink&quot; title=&quot;最后，介绍下QQ的搜索样式的实现&quot;&gt;&lt;/a&gt;最后，介绍下QQ的搜索样式的实现&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-cd997d790643d76e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图7：类似QQ搜索框样式&quot;&gt;&lt;/p&gt;
&lt;p&gt;很简单，在storyboard中设置searchBar的Bar Style为Minimal，或者用代码设置 ：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//设置类似QQ搜索框&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.minimalSearchBar.searchBarStyle = UISearchBarStyleMinimal;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完整代码在&lt;a href=&quot;https://github.com/lexiaoyao20/CustomSearchBar/tree/master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;Excerpt in index | 首页摘要&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="UISearchBar" scheme="http://yoursite.com/tags/UISearchBar/"/>
    
      <category term="自定义" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>UINavigationBar 使用总结</title>
    <link href="http://yoursite.com/2016/05/06/UINavigationBar-%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/05/06/UINavigationBar-使用总结/</id>
    <published>2016-05-06T15:11:42.000Z</published>
    <updated>2016-05-06T15:27:52.000Z</updated>
    
    <content type="html">&lt;p&gt;UINavigationBar是我们在开发过程中经常要用到的一个控件，下面我会为大家介绍一些常用的用法。&lt;/p&gt;
&lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt; &lt;/excerpt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;the rest=&quot;&quot; of=&quot;&quot; contents=&quot;&quot; |=&quot;&quot; 余下全文=&quot;&quot;&gt;

&lt;/the&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-设置导航栏的标题&quot;&gt;&lt;a href=&quot;#1-设置导航栏的标题&quot; class=&quot;headerlink&quot; title=&quot;1. 设置导航栏的标题&quot;&gt;&lt;/a&gt;1. 设置导航栏的标题&lt;/h2&gt;&lt;p&gt;这个不多说，直接上代码&lt;br&gt;&lt;code&gt;self.navigationItem.title = @&amp;quot;UINavigationBar使用总结&amp;quot;;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-设置导航栏的背景颜色&quot;&gt;&lt;a href=&quot;#2-设置导航栏的背景颜色&quot; class=&quot;headerlink&quot; title=&quot;2. 设置导航栏的背景颜色&quot;&gt;&lt;/a&gt;2. 设置导航栏的背景颜色&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//通过barTintColor来设置背景色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; self.navigationController.navigationBar.barTintColor = [UIColor redColor];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-97239749e8c4d721.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150912_1.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;barTintColor: 这个属性需要在iOS7以上才可以使用; 如果要支持iOS6以及以下的系统，可以参考这篇文章：&lt;a href=&quot;http://www.saturngod.net/articles/uinavigationbar-background-color/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UINavigationBar Background Color &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-设置导航栏的背景图片&quot;&gt;&lt;a href=&quot;#3-设置导航栏的背景图片&quot; class=&quot;headerlink&quot; title=&quot;3. 设置导航栏的背景图片&quot;&gt;&lt;/a&gt;3. 设置导航栏的背景图片&lt;/h2&gt;&lt;p&gt;除了通过设置背景颜色来改变导航栏的外观外，我们还可以通过背景图片来设置导航栏的外观。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[self.navigationController.navigationBar setBackgroundImage:[UIImage imageNamed:@&amp;quot;Background&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                  forBarMetrics:UIBarMetricsDefault];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-0a1df5d00c980f4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150912_2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这里得稍微说说UIBarMetrics这个枚举, 它主要是用来控制在不同状态下导航栏的显示。和UIButton的&lt;br&gt;&lt;code&gt;- (void)setBackgroundImage:(nullable UIImage *)image forState:(UIControlState)state&lt;/code&gt; 这个方法有点类似。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;//表示横屏竖屏都显示&lt;br&gt;    UIBarMetricsDefault,&lt;br&gt;    //表示在只横屏下才显示，和UIBarMetricsLandscapePhone功效一样，不过iOS8已经弃用了&lt;br&gt;    UIBarMetricsCompact,&lt;br&gt;    UIBarMetricsDefaultPrompt和UIBarMetricsCompactPrompt这两个我还没搞清楚是什么意思，有知道的朋友不妨给我们来普及一下。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-更改顶部状态栏的颜色&quot;&gt;&lt;a href=&quot;#4-更改顶部状态栏的颜色&quot; class=&quot;headerlink&quot; title=&quot;4. 更改顶部状态栏的颜色&quot;&gt;&lt;/a&gt;4. 更改顶部状态栏的颜色&lt;/h2&gt;&lt;p&gt;从效果图可以看出，我们设置背景色或者背景图之后，状态栏依然还是默认的黑色，这样感觉不好看。好在，系统给我们提供了&lt;strong&gt;UIStatusBarStyleDefault&lt;/strong&gt;和&lt;strong&gt;UIStatusBarStyleLightContent&lt;/strong&gt;两种样式供我们选择。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UIStatusBarStyleDefault，系统的默认样式，黑色内容，用于浅色的背景（如白色）&lt;/li&gt;
&lt;li&gt;UIStatusBarStyleLightContent  白色内容，用于深色的背景（如红色）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面来看看具体怎么实现，主流的实现方式是分两步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在工程的Info.plist文件中添加一行&lt;strong&gt;UIViewControllerBasedStatusBarAppearance&lt;/strong&gt;，选择Boolean类型，并设置为YES，Xcode会自动把名称变为View controller-based status bar appearance。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-50f7c92516d33662.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150913_4.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;在你的ViewController中添加下面的方法&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-(UIStatusBarStyle)preferredStatusBarStyle&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return UIStatusBarStyleLightContent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;想知道更多地方式，可以参考这两个页面：&lt;a href=&quot;http://stackoverflow.com/questions/17678881/how-to-change-status-bar-text-color-in-ios-7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to change Status Bar text color in iOS 7&lt;/a&gt; 和 &lt;a href=&quot;http://www.cnblogs.com/scorpiozj/p/3361162.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS7下Status Bar字体颜色修改&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外，&lt;strong&gt;特别需要注意的是&lt;/strong&gt;，如果你的ViewController是通过navigationController push进来的，还需要加下面一句代码才能生效：&lt;br&gt;&lt;code&gt;self.navigationController.navigationBar.barStyle = UIBarStyleBlack;&lt;/code&gt;&lt;br&gt;具体，可参考&lt;a href=&quot;http://stackoverflow.com/questions/19108513/uistatusbarstyle-preferredstatusbarstyle-does-not-work-on-ios-7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIStatusBarStyle PreferredStatusBarStyle does not work on iOS 7&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;恩，我们来看看运行效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-e79f8560574fcfbe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150913_5.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-设置返回按钮&quot;&gt;&lt;a href=&quot;#5-设置返回按钮&quot; class=&quot;headerlink&quot; title=&quot;5. 设置返回按钮&quot;&gt;&lt;/a&gt;5. 设置返回按钮&lt;/h2&gt;&lt;p&gt;从上面的效果图中我们可以看到返回按钮还是默认的蓝色按钮，下面我将会大家来介绍返回按钮的个性化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置返回按钮的颜色&lt;br&gt;只需要设置tintColor属性即可&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.navigationController.navigationBar.tintColor = [UIColor whiteColor];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;得到的效果图如下：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-79a4ebc0c6585360.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150915_1.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只设置返回按钮的图片&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)goToBack &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.navigationController popViewControllerAnimated:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setBackButtonWithImage &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *leftButtonIcon = [[UIImage imageNamed:@&amp;quot;LeftButton_back_Icon&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBarButtonItem *leftButton = [[UIBarButtonItem alloc] initWithImage:leftButtonIcon&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                   style:UIBarButtonItemStyleBordered&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  target:self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  action:@selector(goToBack)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationItem.leftBarButtonItem = leftButton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //修复navigationController侧滑关闭失效的问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationController.interactivePopGestureRecognizer.delegate = (id)self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的效果如下：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-f208552c7eb72096.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150915_2.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里需要注意的地方有三点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要自己实现返回按钮的事件。&lt;/li&gt;
&lt;li&gt;特别的解释下UIImage的&lt;em&gt;imageWithRenderingMode:&lt;/em&gt;方法，参数&lt;em&gt;UIImageRenderingModeAlwaysOriginal&lt;/em&gt; 表示总是用原图渲染，如果不这么设置，返回按钮将会显示tintColor的颜色(默认为蓝色)。UITabbarItem也存在同样地问题。 &lt;/li&gt;
&lt;li&gt;我们自己设置返回按钮，会导致系统的侧滑关闭效果失效。添加上面代码中最后一句代码即可修复。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;仅设置返回按钮的文字&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)setBackButtonTitle &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBarButtonItem *leftButton = [[UIBarButtonItem alloc] initWithTitle:NSLocalizedString(@&amp;quot;取消&amp;quot;, nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                   style:UIBarButtonItemStylePlain&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                  target:self action:@selector(goToBack)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.tintColor = [UIColor whiteColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationItem.leftBarButtonItem = leftButton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-0f9e2f96ce6cd504.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150915_3.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义返回按钮&lt;br&gt;如果上面几种方式还无法满足你的要求（比如，需要同时设置返回按钮文字和图片），就需要用到&lt;em&gt;UIBarButtonItem&lt;/em&gt;的&lt;em&gt;initWithCustomView&lt;/em&gt;方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)setCustomLeftButton &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIView* leftButtonView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 60, 40)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIButton* leftButton = [UIButton buttonWithType:UIButtonTypeSystem];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.backgroundColor = [UIColor clearColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.frame = leftButtonView.frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [leftButton setImage:[UIImage imageNamed:@&amp;quot;LeftButton_back_Icon&amp;quot;] forState:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [leftButton setTitle:@&amp;quot;返回&amp;quot; forState:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.tintColor = [UIColor redColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.autoresizesSubviews = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    leftButton.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleLeftMargin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [leftButton addTarget:self action:@selector(goToBack) forControlEvents:UIControlEventTouchUpInside];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [leftButtonView addSubview:leftButton];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBarButtonItem* leftBarButton = [[UIBarButtonItem alloc] initWithCustomView:leftButtonView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationItem.leftBarButtonItem = leftBarButton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-8b576c44f25d7118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150915_5.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设置&lt;em&gt;rightBarButtonItem&lt;/em&gt;基本上脱离不了上面的几种方式，大家可以参照上面返回按钮的设置方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;6-隐藏导航栏底部的线条&quot;&gt;&lt;a href=&quot;#6-隐藏导航栏底部的线条&quot; class=&quot;headerlink&quot; title=&quot;6. 隐藏导航栏底部的线条&quot;&gt;&lt;/a&gt;6. 隐藏导航栏底部的线条&lt;/h2&gt;&lt;p&gt;有时候遇到一些特殊的要求，需要隐藏导航栏底部的线条。&lt;br&gt;两行代码就可以做到。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置导航栏的背景图（setBackgroundImage方法）&lt;/li&gt;
&lt;li&gt;设置导航栏的shadowImage (setShadowImage方法)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UINavigationBar *navigationBar = self.navigationController.navigationBar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //设置透明的背景图，便于识别底部线条有没有被隐藏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [navigationBar setBackgroundImage:[[UIImage alloc] init]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       forBarPosition:UIBarPositionAny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           barMetrics:UIBarMetricsDefault];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //此处使底部线条失效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [navigationBar setShadowImage:[UIImage new]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来看看效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-917239b652d32e73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150922_1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;另外，还有一种做法，一行代码就可以达到效果，也真是够神奇的。。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//方法二：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationController.navigationBar.clipsToBounds = YES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想要知道更详细的内容可以参考这个页面：&lt;a href=&quot;http://stackoverflow.com/questions/19226965/how-to-hide-ios7-uinavigationbar-1px-bottom-line&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to hide iOS7 UINavigationBar 1px bottom line&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;7-设置导航条底部线条的颜色&quot;&gt;&lt;a href=&quot;#7-设置导航条底部线条的颜色&quot; class=&quot;headerlink&quot; title=&quot;7. 设置导航条底部线条的颜色&quot;&gt;&lt;/a&gt;7. 设置导航条底部线条的颜色&lt;/h2&gt;&lt;p&gt;有了上面的基础，设置导航栏线条的颜色就变得很简单了。&lt;br&gt;首先，我做了个UIImage的分类：通过颜色转成UIImage；&lt;br&gt;然后，用上面的方案来设置导航栏底部线条。&lt;/p&gt;
&lt;p&gt;颜色转图片的代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation UIImage (ColorImage)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (UIImage *)imageWithColor:(UIColor *)color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGRect rect = CGRectMake(0.0f, 0.0f, 1.0f, 1.0f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIGraphicsBeginImageContext(rect.size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextRef context = UIGraphicsGetCurrentContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextSetFillColorWithColor(context, [color CGColor]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGContextFillRect(context, rect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIGraphicsEndImageContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置导航栏底部线条颜色的代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UINavigationBar *navigationBar = self.navigationController.navigationBar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [navigationBar setBackgroundImage:[[UIImage alloc] init]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       forBarPosition:UIBarPositionAny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           barMetrics:UIBarMetricsDefault];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //此处使底部线条颜色为红色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [navigationBar setShadowImage:[UIImage imageWithColor:[UIColor redColor]]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;依照惯例，看下效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-3111c007f74ca168.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Snip20150923_2.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然还有其他的方式也可以做到，如addSubview, addSubLayer等。感兴趣的话可以参考下这个页面：&lt;a href=&quot;http://stackoverflow.com/questions/19101361/ios7-change-uinavigationbar-border-color&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS7 - Change UINavigationBar border color&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;8-在导航栏上添加多个按钮&quot;&gt;&lt;a href=&quot;#8-在导航栏上添加多个按钮&quot; class=&quot;headerlink&quot; title=&quot;8. 在导航栏上添加多个按钮&quot;&gt;&lt;/a&gt;8. 在导航栏上添加多个按钮&lt;/h2&gt;&lt;p&gt;以微信打开网页时的效果为例，效果图如下，有两个按钮：返回和关闭。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-80aaf5bfd6782e7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;微信效果图.png&quot;&gt;&lt;br&gt;有下面两种方式可供选择，但是最终还是要用到&lt;em&gt;leftBarButtonItems&lt;/em&gt;这个方法。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#define UserMethod1 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIBarButtonItem *closeItem = [[UIBarButtonItem alloc] initWithTitle:@&amp;quot;关闭&amp;quot; style:UIBarButtonItemStylePlain target:self action:@selector(closeAction)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (UserMethod1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //方法一:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.navigationItem.leftBarButtonItems = @[closeItem];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //要求显示默认的返回按钮，但是文字会显示默认的Back，暂时还不知道这个文字怎么改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.navigationItem.leftItemsSupplementBackButton = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //方法二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UIButton* leftButton = [UIButton buttonWithType:UIButtonTypeSystem];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.backgroundColor = [UIColor clearColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.frame = CGRectMake(0, 0, 45, 40);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [leftButton setImage:[UIImage imageNamed:@&amp;quot;LeftButton_back_Icon&amp;quot;] forState:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [leftButton setTitle:@&amp;quot;返回&amp;quot; forState:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.tintColor = [UIColor whiteColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.autoresizesSubviews = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftButton.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleLeftMargin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [leftButton addTarget:self action:@selector(goToBack) forControlEvents:UIControlEventTouchUpInside];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UIBarButtonItem* backItem = [[UIBarButtonItem alloc] initWithCustomView:leftButton];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.navigationItem.leftBarButtonItems = @[backItem,closeItem];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，运行的效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-1ee39cae2ec10a08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;在导航栏上添加多个按钮.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方法一用到了&lt;code&gt;leftItemsSupplementBackButton&lt;/code&gt; 这个属性，会显示系统默认的返回按钮，但是文字也是显示默认的Back文字，目前还没找到怎么修改这个文字，如果有谁知道，还请不吝赐教；所以我暂时还是建议大家用方法二。相应的还有 &lt;em&gt;rightBarButtonItems&lt;/em&gt; 这个属性，如果要在导航栏右侧展示多个按钮的话，可以设置这个属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;9-在导航栏上添加分段控件&quot;&gt;&lt;a href=&quot;#9-在导航栏上添加分段控件&quot; class=&quot;headerlink&quot; title=&quot;9. 在导航栏上添加分段控件&quot;&gt;&lt;/a&gt;9. 在导航栏上添加分段控件&lt;/h2&gt;&lt;p&gt;这次，以QQ为例，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UISegmentedControl *segControl = [[UISegmentedControl alloc] initWithItems:@[@&amp;quot;消息&amp;quot;,@&amp;quot;电话&amp;quot;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    segControl.tintColor = [UIColor colorWithRed:0.07 green:0.72 blue:0.96 alpha:1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [segControl setSelectedSegmentIndex:0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.navigationItem.titleView = segControl;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码很简单，就是设置&lt;code&gt;titleView&lt;/code&gt;这个属性，当然，你也可以把这个属性设置为你自定义的View。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/452998-77c7dc843dc0c96a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;类似于QQ的导航栏.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;10-导航栏全局属性设置&quot;&gt;&lt;a href=&quot;#10-导航栏全局属性设置&quot; class=&quot;headerlink&quot; title=&quot;10. 导航栏全局属性设置&quot;&gt;&lt;/a&gt;10. 导航栏全局属性设置&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//全局设置导航栏主题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setNavigationControllerAppearance &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [UINavigationBar appearance].barStyle  = UIBarStyleBlack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[UINavigationBar appearance] setBarTintColor:[UIColor colorWithWhite:0.1 alpha:0.5]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[UINavigationBar appearance] setTintColor:[UIColor whiteColor]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;全局设置导航栏的好处有两个：一是不用对每个NavigationBar进行设置；二是方便做主题管理，切换主题，只需要更改全局设置即可。&lt;/p&gt;
&lt;h2 id=&quot;11-与导航栏相关的一些开源组件&quot;&gt;&lt;a href=&quot;#11-与导航栏相关的一些开源组件&quot; class=&quot;headerlink&quot; title=&quot;11. 与导航栏相关的一些开源组件&quot;&gt;&lt;/a&gt;11. 与导航栏相关的一些开源组件&lt;/h2&gt;&lt;h3 id=&quot;11-1-NJKWebViewProgress-类似于Safiri加载网页时的进度显示&quot;&gt;&lt;a href=&quot;#11-1-NJKWebViewProgress-类似于Safiri加载网页时的进度显示&quot; class=&quot;headerlink&quot; title=&quot;11.1 NJKWebViewProgress - 类似于Safiri加载网页时的进度显示&quot;&gt;&lt;/a&gt;11.1 &lt;a href=&quot;https://github.com/ninjinkun/NJKWebViewProgress&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NJKWebViewProgress&lt;/a&gt; - 类似于Safiri加载网页时的进度显示&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/082fc708cc461dc53832b7d14d5affdf475dd57b/68747470733a2f2f7261772e6769746875622e636f6d2f6e696e6a696e6b756e2f4e4a4b5765625669657750726f67726573732f6d61737465722f44656d6f4170702f53637265656e73686f742f73637265656e73686f74312e706e67&quot; alt=&quot;网页加载进度.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;11-2-FDFullscreenPopGesture-一个丝滑的全屏滑动返回手势&quot;&gt;&lt;a href=&quot;#11-2-FDFullscreenPopGesture-一个丝滑的全屏滑动返回手势&quot; class=&quot;headerlink&quot; title=&quot;11.2 FDFullscreenPopGesture -  一个丝滑的全屏滑动返回手势&quot;&gt;&lt;/a&gt;11.2 &lt;a href=&quot;https://github.com/forkingdog/FDFullscreenPopGesture&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FDFullscreenPopGesture&lt;/a&gt; -  一个丝滑的全屏滑动返回手势&lt;/h3&gt;&lt;p&gt;对应的文章介绍可以点这个&lt;a href=&quot;http://blog.sunnyxx.com/2015/06/07/fullscreen-pop-gesture/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/forkingdog/FDFullscreenPopGesture/master/Snapshots/snapshot0.gif&quot; alt=&quot;丝滑的全屏返回手势.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后，奉上Demo的地址：&lt;a href=&quot;https://github.com/lexiaoyao20/NavigationBarDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NavigationBarDemo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;UINavigationBar是我们在开发过程中经常要用到的一个控件，下面我会为大家介绍一些常用的用法。&lt;/p&gt;
&lt;p&gt;&lt;Excerpt in index | 首页摘要&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="UINavigationBar" scheme="http://yoursite.com/tags/UINavigationBar/"/>
    
  </entry>
  
</feed>
